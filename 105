/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
    	
    	return getTree(preorder, 0, preorder.length-1, inorder, 0, inorder.length-1);
        
    }
    public TreeNode getTree(int[] preorder, int preBeg, int preEnd,
    		int[] inorder,int inBeg, int inEnd) {
    	
    	if(inBeg > inEnd) {
    		return null;
    	}
    	
    	int index = 0;
    	int val = preorder[preBeg];
    	for(int i = 0; i < inorder.length; i++) {
    		if(inorder[i] == val) {
    			index = i;
    			break;
    		}
    	}
    	int length = index - inBeg;
    	TreeNode r = new TreeNode(val);
    	r.left = getTree(preorder, preBeg+1, preBeg+length, inorder, inBeg, index-1);
    	r.right = getTree(preorder, preBeg+length+1, preEnd, inorder, index+1, inEnd);
    	
    	return r;
    }
}
