public class Solution {
    //DP
    public int uniquePaths(int m, int n) {
        
		int[][] path = new int[m][n];
		
		//initial matrix
		for(int i=0; i<m; i++) {
			path[i][0] = 1;
		}
		for(int i=0; i<n; i++) {
			path[0][i] = 1;
		}
		//compute
		for(int i=1; i<m; i++) {
			for(int j=1; j<n; j++) {
				path[i][j] = path[i-1][j] + path[i][j-1];
			}
		}
		return path[m-1][n-1];
	}
    //Recursion times out
    // public int uniquePaths(int m, int n) {
    	
    // 	return findPaths(0,0,m,n);
    // }			
    
    // public int findPaths(int x, int y, int m, int n) {
    	
    // 	if( x > m || y > n) {
    // 		return 0;
    // 	}
    // 	if( x == m && y == n){
    // 		return 1;
    // 	}
    	
    // 	return findPaths(x, y+1, m, n) + findPaths(x+1, y, m, n);
    // }
}
