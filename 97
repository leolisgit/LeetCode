public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if(s1 == null || s2 == null) {
        	return false;
        }
        if(s1.length() == 0) return s2.equals(s3);
        if(s2.length() == 0) return s1.equals(s3);
        if(s1.length() + s2.length() != s3.length()) return false;
        
        boolean[][] dp = new boolean[s1.length()+1][s2.length()+1];
        dp[0][0] = false;
        for(int i = 1; i <= s1.length(); i++) {
         	dp[i][0] = s1.substring(0,i).equals(s3.substring(0,i));
        }
        for(int j = 1; j <= s2.length(); j++) {
        	dp[0][j] = s2.substring(0,j).equals(s3.substring(0,j));
        }
        for(int i = 1; i <= s1.length(); i++) {
        	for(int j = 1; j <= s2.length(); j++) {
        		char c1 = s1.charAt(i-1), c2 = s2.charAt(j-1), c3 = s3.charAt(i+j-1);
        		if(c1 == c3 && c2 == c3) {
        			dp[i][j] = dp[i-1][j] || dp[i][j-1];
        		}else if(c1 == c3) {
        			dp[i][j] = dp[i-1][j];
        		}else if (c2 == c3) {
        			dp[i][j] = dp[i][j-1];
        		}
        	}
        }
        return dp[s1.length()][s2.length()];
    }
}
