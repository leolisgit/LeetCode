public class Solution {
    public int rob(int[] nums) {
        
    	if(nums == null || nums.length == 0){
    		return 0;
    	}
    	
    	if(nums.length == 1) {
    		return nums[0];
    	}
    	
    	int n = nums.length;
    	int[] money = new int[n];
    	//initial 
    	money[0] = nums[0];
    	//rob from 1 to n-1
    	for(int i = 1; i < n-1; i++) {
    		if(i == 1) {
    			money[i] = Math.max(nums[i-1], nums[i]);
    		}else {
        		money[i] = Math.max(money[i-2] + nums[i], money[i-1]);
    		}
    	}
    	int money1 = money[n-2];
    	//rob from 2 to n
    	money[1] = nums[1];
    	for(int i = 2; i < n; i++) {
    		if(i == 2) {
    			money[i] = Math.max(nums[i-1], nums[i]);
    		}else {
        		money[i] = Math.max(money[i-2] + nums[i], money[i-1]);
    		}
    	}
    	
    	return Math.max(money1, money[n-1]);
    }
}
